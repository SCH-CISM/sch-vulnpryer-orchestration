# Note: For every run of the script, Data Pipeline, IAM roles and
#       OpsWorks stack are deleted/updated based on their name.
#       Please use unique names for these to avoid unintended actions on the objects.

# General Settings
[general]
# Access keys of the IAM user for Vulnpryer
aws_access_key_id=<access_key_id>
aws_secret_access_key=<secret_access_key>

# AWS regions where components of Vulnpryer are operating.
s3_aws_region=us-east-1
opsworks_aws_region=us-east-1
pipeline_aws_region=us-west-2
vpc_aws_region=us-west-2
cw_aws_region=us-east-1
iam_aws_region=us-east-1

# OpsWorks Settings
[opsworks]
# IAM roles used by OpsWorks.
# Note that existing IAM roles with these names will have their permission and trust policies updated as defined in the iam_policies folder.
opsworks_role=OpsWorksVulnpryerRole
opsworks_resource_role=OpsWorksVulnpryerResourceRole

# Stack Settings
# Name of the OpsWorks stack that will be created.
# Note that an existing stack with this name will be dropped and recreated.
stack_name=VulnPryerOpsWorksStack
# VPC ID for the OpsWorks stack that will be created.
vpc_id=vpc-XXXXXX
# Default OS must either be Amazon Linux or Ubuntu 12.04 LTS.
# Take note that this is only tested on top of Ubuntu 12.04 LTS.
default_os=Ubuntu 12.04 LTS

# Be sure availability zone/subnet is in the AZ where the persistent EBS volume for the mongodb store resides.
availability_zone=<subnet AZ>
default_subnet_id=subnet-XXXXXXXX
default_ssh_key_name=<private key>
configuration_manager={u'Version': u'11.10', u'Name': u'Chef'}
chef_configuration={'ManageBerkshelf': True, 'BerkshelfVersion': '3.1.3'}
use_opsworks_security_groups=True
# Specify chef data such as API keys, S3 destination bucket, environment (production|staging), and volume id of the persistent mongodb store.
# NOTE: If any of the fields in the custom JSON is incorrect, the deployment script will not produce an error, as it only creates and configures the stack.
custom_json={"vulnpryer" : {"config" : {"vulndb" : {"environment" : "[production|staging]","consumer_key" : "<consumer key>","consumer_secret" : "<consumer secret>"},"s3" : {"bucket_name" : "<bucket name>", "key" : "<key>"},"redseal" : {"username" : "<username>","password" : "<password>"}},"ebs" :{"volume_id" : "vol-XXXXXXXX"}}}
# Specify custom cookbook github repository and revision to use.
custom_cookbooks_source={u'Url': u'<GitHub URL>', u'Type': u'git', u'Revision': u'<GitHub branch>'}
use_custom_cookbooks=True

# Layer Settings
# Specify OpsWorks Layer settings
layer_name=sch-VulnPryer-layer
layer_short_name=vulnpryer
layer_security_group=sg-XXXXXXXX
# Custom recipe list to run on the instances of the layer
layer_custom_recipes={u'Undeploy': [], u'Setup': [], u'Configure': [], u'Shutdown': [], u'Deploy': [u'apt::default', u'build-essential::default', u'sch-base::default', u'git::default', u'vulnpryer::datadrive', u'vulnpryer::default', u'mongodb::mongodb_org_repo', u'sch-mongodb::client', u'sch-mongodb::server', u'vulnpryer::run_immediate']}

# Instance Settings
# Specify OpsWorks Instance Settings
instance_name=vulnpryer
instance_type=m1.small

[custom_script]
# S3 bucket and directory where custom scripts are to be uploaded.
s3_bucket=S3BucketScripts
s3_bucket_directory=S3BucketScriptsDir/

# CloudWatch Settings
[cloudwatch]
# Existing Topic ARN used by SCH for notification
topic_arn=arn:aws:sns:<region>:<account>:<SNS topic>
# Custom CloudWatch metrics to use for handling of overrunning of pipeline.
# Do not use names that include spaces.
vulnpryer_pipeline_metric_namespace=PipelineNS
vulnpryer_pipeline_metric_name=VulnpryerMetric

# Defined acceptable running duration of the nodes. 
# CloudWatch Alarm will alert if this period is reached.
overrunning_threshold_minutes=30

# CloudWatch Alarm names to be used for handling of overrunning of the pipeline. 
# Note that alarms are deleted and recreated.
cw_alarm_vulnpryer_pipeline=VulnPryerPipelineAlarm

# Data Pipeline Settings
[data_pipeline]
# Name of the Pipeline that will be created.
# Note that an existing pipeline with this name will be dropped and recreated.
pipeline_name=VulnPryerPipeline

# IAM roles used by OpsWorks.
# Note that existing IAM roles with this name will have their permission and trust policies updated as defined in the iam_policies folder.
pipeline_role=DataPipelineVulnpryerRole
pipeline_resource_role=DataPipelineVulnpryerResourceRole

# SNS Topic ARN used for notification
topic_arn=arn:aws:sns:<region>:<account>:<SNS topic>


######################################################################################################
# Pipeline objects definition
# Update the string values of the fields specified in their corresponding comment.
# Do not touch anything else.
######################################################################################################

# Schedule
#   startDateTime - specify a future date to start; specify the time in UTC to run the pipeline daily.
pipeline_schedule={u'fields': [{u'stringValue': u'YYYY-MM-DDTHH:MM:SS', u'key': u'startDateTime'},  {u'stringValue': u'1 days', u'key': u'period'}, {u'stringValue': u'Schedule', u'key': u'type'}], u'id': u'pipeline_schedule', u'name': u'Every day at 2 AM'}

# Resource
#   keyPair - EC2 key pair that exists within the region
#   subnetId - VPC subnet in which to place the control instance
#   imageId - AMI number of the Amazon Linux AMI compatible with t2.micro instances existing in the region
# The region and subnet of the control instance is configured to be the same with vulnpryer instance. 
pipeline_resource={u'fields': [{u'stringValue': u'24 Hours', u'key': u'terminateAfter'}, {u'stringValue': u'<vpc_aws_region>', u'key': u'region'}, {u'stringValue': u'<keyPair>', u'key': u'keyPair'}, {u'stringValue': u'false', u'key': u'associatePublicIpAddress'}, {u'stringValue': u'<subnetId>', u'key': u'subnetId'}, {u'stringValue': u'<pipeline_resource_role>', u'key': u'resourceRole'}, {u'stringValue': u'Ec2Resource', u'key': u'type'}, {u'stringValue': u't2.micro', u'key': u'instanceType'}, {u'refValue': u'pipeline_schedule', u'key': u'schedule'}, {u'stringValue': u'<imageId>', u'key': u'imageId'}, {u'stringValue': u'<pipeline_role>', u'key': u'role'}], u'id': u'pipeline_resource', u'name': u'Vulnpryer Control'}

# Settings
#   pipelineLogUri - specify S3 path where you want to store logs from the pipeline; the S3 bucket is expected to be in the same region.
pipeline_settings={u'fields': [{u'stringValue': u'CASCADE', u'key': u'failureAndRerunMode'}, {u'stringValue': u'CRON', u'key': u'scheduleType'}, {u'refValue': u'pipeline_schedule', u'key': u'schedule'}, {u'stringValue': u'<pipelineLogUri>', u'key': u'pipelineLogUri'}, {u'stringValue': u'<pipeline_role>', u'key': u'role'}, {u'stringValue': u'<pipeline_resource_role>', u'key': u'resourceRole'}], u'id': u'Default', u'name': u'Default'}

# Alarm For Success
#   subject - intended subject of the notification on Success
#   message - intended message content of the notification on Success
pipeline_alarm_success={u'fields': [{u'stringValue': u'<message>', u'key': u'message'}, {u'stringValue': u'<subject>', u'key': u'subject'}, {u'stringValue': u'<pipeline_role>', u'key': u'role'}, {u'stringValue': u'<topic_arn>', u'key': u'topicArn'}, {u'stringValue': u'SnsAlarm', u'key': u'type'}], u'id': u'pipeline_alarm_success', u'name': u'Notify Success DEMO'}

# Alarm For Failure
#   subject - intended subject of the notification on Failure
#   message - intended message content of the notification on Failure
pipeline_alarm_failure={u'fields': [{u'stringValue': u'<message>', u'key': u'message'}, {u'stringValue': u'<subject>', u'key': u'subject'}, {u'stringValue': u'<pipeline_role>', u'key': u'role'}, {u'stringValue': u'<topic_arn>', u'key': u'topicArn'}, {u'stringValue': u'SnsAlarm', u'key': u'type'}], u'id': u'pipeline_alarm_failure', u'name': u'Notify Failure'}

# DO NOT TOUCH VulnPryer Notification Activity Node
pipeline_overrunning_notification_activity={u'fields': [{u'refValue': u'pipeline_schedule', u'key': u'schedule'}, {u'stringValue': u'0', u'key': u'maximumRetries'}, {u'stringValue': u"echo '' | crontab -;/usr/bin/aws cloudwatch put-metric-data --metric-name <vulnpryer_pipeline_metric_name> --namespace <vulnpryer_pipeline_metric_namespace> --value=0 --region <cw_aws_region>", u'key': u'command'}, {u'refValue': u'pipeline_resource', u'key': u'runsOn'}, {u'refValue': u'pipeline_vulnpryer_activity', u'key': u'dependsOn'}, {u'stringValue': u'ShellCommandActivity', u'key': u'type'}], u'id': u'pipeline_overrunning_notification_activity', u'name': u'Overrunning Notify Activity'}

# DO NOT TOUCH Vulnpryer Activity Node
pipeline_vulnpryer_activity={u'fields': [{u'refValue': u'pipeline_schedule', u'key': u'schedule'}, {u'stringValue': u's3://<script_path>start_vulnpryer.py', u'key': u'scriptUri'}, {u'stringValue': u'0', u'key': u'maximumRetries'}, {u'refValue': u'pipeline_resource', u'key': u'runsOn'}, {u'refValue': u'pipeline_alarm_success', u'key': u'onSuccess'}, {u'refValue': u'pipeline_alarm_failure', u'key': u'onFail'}, {u'stringValue': u'ShellCommandActivity', u'key': u'type'}], u'id': u'pipeline_vulnpryer_activity', u'name': u'Vulnpryer Activity'}
